<?xml version="1.0" encoding="UTF-8"?>

<!-- N.B.  This web-app element only works with Tomcat 6.0.  This is what runs on Cadmium - our production server.
  If you use an older version of Tomcat, you should alter the below version 2.4.  You will know if things are working
   by using the admin pages to set up classes.  JSP will not work if there is an incompatibility in config.  -->
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">
    <description>MathSpring web application</description>
    <resource-ref>
        <description>DB Connection</description>
        <res-ref-name>jdbc/wodbrose</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    <display-name>mathspring</display-name>
    <context-param>
        <param-name>error.smtpserver</param-name>
        <param-value>loki.cs.umass.edu</param-value>
    </context-param>

    <context-param>
        <param-name>host</param-name>
        <!--<param-value>rose.cs.umass.edu</param-value>-->
        <param-value>mathseeds.wpi.edu:8080/woj</param-value>
        <!--<param-value>cadmium.cs.umass.edu</param-value>-->
    </context-param>
    <!--
    We don't set the servlet port.  It defaults to 80 which is the correct setting when Apache is set to forward servletContext requests
    to tomcat.  -->
    <!--<context-param>-->
        <!--<param-name>servletPort</param-name>-->
        <!--<param-value>8080</param-value>-->
    <!--</context-param>-->
    <!-- this selects which of the databases (defined as datasources in context.xml) we use
    options are wodb for cadmium db or wodblocal for db on localhost. wodblocal is acceptable when deploying to cadmium
    because it will use the mysql running on cadmium -->
    <context-param>
        <param-name>wodb.datasource</param-name>
        <param-value>jdbc/wodbrose</param-value>
    </context-param>
    <context-param>
        <param-name>pedagogiesFile</param-name>
        <param-value>/pedagogies.xml</param-value>
    </context-param>

    <!--<context-param>-->
        <!--<param-name>html5ProblemURI</param-name>-->
        <!--<param-value>http://rose.cs.umass.edu/wayang2/html5Probs/</param-value>-->
        <!--&lt;!&ndash;<param-value>http://cadmium.cs.umass.edu/mathspring/flash/client/</param-value>&ndash;&gt;-->
    <!--</context-param>-->

    <context-param>
        <param-name>webContentPath</param-name>
        <param-value>http://mathseeds.wpi.edu:8080/mathspring/mscontent/</param-value>
    </context-param>

    <!--YOU MUST SET THESE PARAMS TO BE APPROPRIATE FOR YOUR MACHINE.   You must reference the Flash
       client that is on your own machine (served by apache) and not one on some other machine!-->

    <context-param>
        <param-name>probplayerPath</param-name>
        <param-value>Problems/probplayer.swf</param-value>
    </context-param>
    <context-param>
        <param-name>probPreviewerPath</param-name>
        <param-value>Problems/problem_checker.swf</param-value>
    </context-param>

    <context-param>
        <param-name>html5Probs</param-name>
        <param-value>html5Probs/</param-value>
    </context-param>
    <!-- When working on a development machine the html5 content must come from within tomcat because the pages generated by a servlet
     all have localhost:8080/mt as their host which means the host on the URIs to the content must be the same to avoid security violations.
     When deployed to a server the host in the URIs is always something like rose.cs.umass.edu/woj  or rose.cs.umass.edu/html5Probs so there
     will not be a security violation if the HTML5 content lives separately from the Tomcat resources in the Apache web tree
     N.B. The same is true for Flash Problems.   They are loaded by swfobject from javascript and they have to have matching hosts
     in order to avoid security issues.
     -->
    <context-param>
        <param-name>isDevelopmentEnv</param-name>
        <param-value>false</param-value>
    </context-param>
    <!--Sets whether it is using the 'classic' Flash tutor or the 'new' Javascript tutor-->
    <context-param>
        <param-name>useHybridTutor</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <param-name>useLearningCompanions</param-name>
        <param-value>true</param-value>
    </context-param>




    <servlet>
        <servlet-name>TutorBrain</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.WoTutorServlet</servlet-class>
        <!--YOU MUST SET THIS PARAM TO BE APPROPRIATE FOR YOUR MACHINE.  If you do not run a 4mality servlet on your
        local machine, then you can call it on cadmium, but it will not call back to your Wayang servlet which will
        effect logging and problem selection.   -->



        <!--Controls the frequency that edu.umass.ckc.wo.tutor.intervSel.ExternalActivityInterventionSelector will pick an external activity-->
        <init-param>
            <param-name>externalActivityPercentage</param-name>
            <param-value>15.0</param-value>
        </init-param>

        <init-param>
            <param-name>assistmentsLogBackURL</param-name>
            <param-value>https://www.assistments.org/api2/partnerProblemLog</param-value>
            <!--<param-value>https://test1.assistments.org/api2/partnerProblemLog</param-value>-->

        </init-param>

        <init-param>
            <param-name>videoURI</param-name>
            <param-value>video/</param-value>
        </init-param>
        <init-param>
            <param-name>emailLogFilename</param-name>
            <param-value>u:\\wayang\\emailErr.log</param-value>
        </init-param>

    </servlet>

    <servlet>
        <servlet-name>WoAdmin</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.WoAdminServlet</servlet-class>

        <init-param>
            <param-name>useServletSession</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>sessionTimeoutMinutes</param-name>
            <param-value>30</param-value>
        </init-param>
        <init-param>
            <param-name>prepostProblemURI</param-name>
            <param-value>flash/</param-value>
        </init-param>
        <init-param>
            <param-name>mailServer</param-name>
            <param-value>loki.cs.umass.edu</param-value>
        </init-param>
    </servlet>


    <servlet>
        <servlet-name>WoLoginServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.login.WoLoginServlet</servlet-class>

        <!--<load-on-startup>1</load-on-startup>-->


    </servlet>

    <servlet>
        <servlet-name>ImageFetch</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.ImageFetchServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>MathspringSubSessionServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.MathspringSubSessionServlet</servlet-class>


        <init-param>
            <param-name>handlerClassName</param-name>
            <param-value>edu.umass.ckc.wo.servletController.MariHandler</param-value>
        </init-param>

        <init-param>
            <param-name>videoURI</param-name>
            <param-value>http://cadmium.cs.umass.edu/mathspring/video/</param-value>
        </init-param>
        <init-param>
            <param-name>emailLogFilename</param-name>
            <param-value>u:\\wayang\\emailErr.log</param-value>
        </init-param>

    </servlet>

    <servlet>
        <servlet-name>TestDbServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.TestDbServlet</servlet-class>

    </servlet>

    <servlet-mapping>
        <servlet-name>ImageFetch</servlet-name>
        <url-pattern>/getImage</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
           <servlet-name>TestDbServlet</servlet-name>
           <url-pattern>/TestDbServlet</url-pattern>
       </servlet-mapping>
    <servlet-mapping>
        <servlet-name>MathspringSubSessionServlet</servlet-name>
        <url-pattern>/mathspringSubSession</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>WoLoginServlet</servlet-name>
        <url-pattern>/WoLoginServlet</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>LineGraphServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.charts.LineGraphServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>LineGraphServlet</servlet-name>
        <url-pattern>/LineGraphServlet</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>BarChartServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.charts.BarChartServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>BarChartServlet</servlet-name>
        <url-pattern>/BarChartServlet</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>BarChartServletIvon</servlet-name>
        <servlet-class>edu.umass.ckc.wo.charts.BarChartServletIvon</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>Jersey Web Application</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Jersey Web Application</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>BarChartServletIvon</servlet-name>
        <url-pattern>/BarChartServletIvon</url-pattern>
    </servlet-mapping>


    <servlet-mapping>
        <servlet-name>TutorBrain</servlet-name>
        <url-pattern>/TutorBrain</url-pattern>
    </servlet-mapping>


    <servlet-mapping>
        <servlet-name>WoAdmin</servlet-name>
        <url-pattern>/WoAdmin</url-pattern>
    </servlet-mapping>

    <!-- Makes the HttpSession associated with each request never time out -->
    <session-config>
        <session-timeout>-1</session-timeout>
    </session-config>
    <mime-mapping>
        <extension>txt</extension>
        <mime-type>text/plain</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>htm</extension>
        <mime-type>text/html</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>gif</extension>
        <mime-type>image/gif</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>jpeg</extension>
        <mime-type>image/jpeg</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>html</extension>
        <mime-type>text/html</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>jpg</extension>
        <mime-type>image/jpeg</mime-type>
    </mime-mapping>
    <!--
    <taglib>
        <taglib-uri>http://java.sun.com/jstl/fmt</taglib-uri>
        <taglib-location>/WEB-INF/fmt.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>http://java.sun.com/jstl/core</taglib-uri>
        <taglib-location>/WEB-INF/c.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>http://java.sun.com/jstl/sql</taglib-uri>
        <taglib-location>/WEB-INF/sql.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>http://java.sun.com/jstl/x</taglib-uri>
        <taglib-location>/WEB-INF/x.tld</taglib-location>
    </taglib> -->
</web-app>